import { useState } from "react";
import "../style/variables.css";
import "../style/DataSheet_Graphic.css";
import ClassAccordion from "./ClassAccordion"

function DataSheet_Graphic() {

    const graphicClasses = [
        {
            id: 0,
            class: "Classifica",
            description: "Classe che estende JFrame e visualizza la classifica dei giocatori con il punteggio",
            attributes: [
                { d: "classifica: area di testo per visualizzare i dati della classifica", id: 0 },
                { d: "player: etichetta che mostra il nome del giocatore", id: 1 },
                { d: "mouseClickPoint: variabile che memorizza il punto di clic del mouse per il trascinamento della finestra", id: 2 },
                { d: "punteggio: variabile che tiene traccia del punteggio del giocatore", id: 3 },
                { d: "isClassificaAttached: booleano che permette al programma di capire se la finestra della classifica è ancorata a un certo punto o se può essere spostata liberamente", id: 4 },
            ],
            isMethods: true,
            methods: [
                {
                    id: 0,
                    isPublic: true,
                    type: "void",
                    name: "Classifica",
                    params: [
                        { id: 0, type: "String", name: "name" },
                        { id: 1, type: "int", name: "x" },
                        { id: 2, type: "int", name: "y" },
                        { id: 3, type: "int", name: "height" },
                        { id: 4, type: "Boolean", name: "isClassificaAttached" },
                    ],
                    description: "Costruttore che inizializza i componenti e imposta le dimensioni della finestra."
                },
                {
                    id: 1,
                    isPublic: true,
                    type: "void",
                    name: "initComponents",
                    params: [
                        { id: 0, type: "String", name: "name" },
                        { id: 1, type: "int", name: "x" },
                        { id: 2, type: "int", name: "y" },
                        { id: 3, type: "int", name: "height" },
                        { id: 4, type: "Boolean", name: "isClassificaAttached" }
                    ],
                    description: "Inizializza i componenti della finestra Classifica, impostando layout, colore di sfondo e listener per eventi di mouse",
                },
                {
                    id: 2,
                    isPublic: true,
                    type: "void",
                    name: "refresh",
                    params: [{}],
                    description: "Aggiorna la classifica con i dati prelevati dal file 'classifica.txt'",
                },
                {
                    id: 3,
                    isPublic: true,
                    type: "void",
                    name: "addListenerToAllComponents",
                    params: [
                        { id: 0, type: "Container", name: "container" },
                        { id: 1, type: "Classifica", name: "frame" },
                    ],
                    description: "Aggiunge listener del mouse per trascinamento e doppio clic a tutti i componenti della finestra",
                },
                {
                    id: 4,
                    isPublic: true,
                    type: "ArrayList<String>",
                    name: "PrelevaDati",
                    params: [{}],
                    description: "Preleva i dati della classifica dal file 'classifica.txt' e li restituisce come ArrayList",
                },
                {
                    id: 5,
                    isPublic: true,
                    type: "boolean",
                    name: "ScriviDati",
                    params: [{ id: 0, type: "String", name: "newLine" }],
                    description: "Scrive nuovi dati nella classifica.txt e restituisce true se avviene con successo",
                },
                {
                    id: 6,
                    isPublic: true,
                    type: "void",
                    name: "calcolaPunteggio",
                    params: [
                        { id: 0, type: "Long", name: "elapsedTime" },
                        { id: 1, type: "int", name: "caselle" },
                    ],
                    description: "Calcola il punteggio in base al tempo trascorso e al numero di caselle",
                },
                {
                    id: 7,
                    isPublic: true,
                    type: "String",
                    name: "getStats",
                    params: [{}],
                    description: "Restituisce una stringa con il nome del giocatore e il suo punteggio calcolato",
                },
                {
                    id: 8,
                    isPublic: true,
                    type: "void",
                    name: "setPos",
                    params: [
                        { id: 0, type: "int", name: "x" },
                        { id: 1, type: "int", name: "y" },
                    ],
                    description: "Imposta la posizione della finestra",
                },
                {
                    id: 9,
                    isPublic: true,
                    type: "boolean",
                    name: "getIsClassificaAttached",
                    params: [{}],
                    description: "Restituisce se la finestra della classifica è attaccata o meno",
                },
            ],
        },
        {
            id: 1,
            class: "Flag",
            description: "Classe che estende JFrame e visualizza un pannello con indicatori di bandiera, indicando se il gioco è stato vinto o perso",
            attributes: [
                { d: "jPanel1: pannello che contiene le etichette e altri componenti della classe", id: 0 },
                { d: "labels: array di 10 etichette utilizzate per indicare il progresso o le bandiere", id: 1 },
                { d: "nflag: variabile intera che conta il numero di bandiere attualmente impostate", id: 2 },
                { d: "maxFlags: variabile intera che rappresenta il numero massimo di bandiere per il livello corrente", id: 3 },
                { d: "isPersa: booleano per indicare se il gioco è stato perso", id: 4 },
                { d: "isVinta: booleano per indicare se il gioco è stato vinto", id: 5 },
                { d: "mouseClickPoint: memorizza la posizione del mouse durante il clic per il trascinamento della finestra", id: 6 },
                { d: "isFlagAttached: booleano che indica se la finestra della bandiera è attaccata al campo minato", id: 7 },
                { d: "parent: istanza di JCampoMinato che rappresenta il genitore della finestra delle bandiere", id: 8 },
            ],
            isMethods: true,
            methods: [
                {
                    id: 0,
                    isPublic: true,
                    type: "",
                    name: "Flag",
                    params: [
                        { id: 0, type: "JCampoMinato", name: "parent" },
                        { id: 1, type: "Difficulty", name: "d" },
                        { id: 2, type: "int", name: "x" },
                        { id: 3, type: "int", name: "y" },
                        { id: 4, type: "Boolean", name: "isFlagAttached" },
                    ],
                    description: "Costruttore che inizializza la finestra 'Flag', impostando dimensioni e posizione in base alla difficoltà",
                },
                {
                    id: 1,
                    isPublic: true,
                    type: "void",
                    name: "initComponents",
                    params: [
                        { id: 0, type: "Difficulty", name: "d" },
                        { id: 1, type: "int", name: "x" },
                        { id: 2, type: "int", name: "y" },
                        { id: 3, type: "Boolean", name: "isFlagAttached" },
                    ],
                    description: "Inizializza i componenti della finestra 'Flag', tra cui il pannello, le etichette e i listener per eventi di mouse",
                },
                {
                    id: 2,
                    isPublic: true,
                    type: "void",
                    name: "refresh",
                    params: [{}],
                    description: "Aggiorna le etichette in base al numero di bandiere e allo stato del gioco (vinto o perso)",
                },
                {
                    id: 3,
                    isPublic: true,
                    type: "void",
                    name: "setPersa",
                    params: [{}],
                    description: "Imposta lo stato del gioco a 'perso' e aggiorna le etichette di conseguenza, cambiando il colore delle bandiere a rosso",
                },
                {
                    id: 4,
                    isPublic: true,
                    type: "void",
                    name: "setVinta",
                    params: [{}],
                    description: "Imposta lo stato del gioco come 'vinto' e aggiorna le etichette di conseguenza, cambiando il colore delle bandiere a oro",
                },
                {
                    id: 5,
                    isPublic: true,
                    type: "void",
                    name: "addFlag",
                    params: [{}],
                    description: "Aumenta il conteggio delle bandiere di uno e aggiorna l'aspetto delle etichette",
                },
                {
                    id: 6,
                    isPublic: true,
                    type: "void",
                    name: "removeFlag",
                    params: [{}],
                    description: "Diminuisce il conteggio delle bandiere di uno e aggiorna le etichette",
                },
                {
                    id: 7,
                    isPublic: true,
                    type: "void",
                    name: "resetAllFlag",
                    params: [{}],
                    description: "Resetta il conteggio delle bandiere a 0 e aggiorna le etichette",
                },
                {
                    id: 8,
                    isPublic: true,
                    type: "int",
                    name: "getFlagCount",
                    params: [{}],
                    description: "Restituisce il conteggio attuale delle bandiere",
                },
                {
                    id: 9,
                    isPublic: true,
                    type: "void",
                    name: "setFlagColor",
                    params: [
                        { id: 0, type: "int", name: "index" },
                        { id: 1, type: "Color", name: "bg" },
                        { id: 2, type: "Color", name: "border" },
                    ],
                    description: "Imposta il colore di sfondo e il bordo di una singola etichetta della bandiera",
                },
                {
                    id: 10,
                    isPublic: true,
                    type: "void",
                    name: "setAllFlagColor",
                    params: [
                        { id: 0, type: "Color", name: "bg" },
                        { id: 1, type: "Color", name: "border" },
                    ],
                    description: "Imposta il colore di sfondo e il bordo di tutte le etichette della bandiera",
                },
                {
                    id: 11,
                    isPublic: true,
                    type: "void",
                    name: "setPos",
                    params: [
                        { id: 0, type: "int", name: "x" },
                        { id: 1, type: "int", name: "y" },
                    ],
                    description: "Imposta la posizione della finestra delle bandiere in base alle coordinate x e y",
                },
                {
                    id: 12,
                    isPublic: true,
                    type: "boolean",
                    name: "getIsFlagAttached",
                    params: [{}],
                    description: "Restituisce il valore dell'attributo statico 'isFlagAttached' che indica se la finestra della bandiera è attaccata al campo minato",
                },
            ],
        },
        {
            id: 2,
            class: "JCampoMinato",
            description: "Classe che estende JFrame e rappresenta il campo minato, con variabili statiche per flag e classifica, e gestisce eventi del frame",
            attributes: [
                { d: "flag: oggetto Flag utilizzato per visualizzare il conteggio delle bandiere", id: 0 },
                { d: "classifica: oggetto Classifica per visualizzare la classifica dei giocatori", id: 1 },
                { d: "startTime: variabile per memorizzare il tempo di inizio del gioco", id: 2 },
                { d: "lightGreen: colore di sfondo per la finestra del campo minato", id: 3 },
                { d: "nome: nome del giocatore corrente", id: 4 },
            ],
            isMethods: true,
            methods: [
                {
                    id: 0,
                    isPublic: true,
                    type: "",
                    name: "JCampoMinato",
                    params: [
                        { id: 0, type: "Difficulty", name: "d" },
                        { id: 1, type: "String", name: "nome" },
                    ],
                    description: "Costruttore che inizializza il frame del campo minato, impostando dimensioni e posizione in base alla difficoltà e al nome del giocatore",
                },
                {
                    id: 1,
                    isPublic: true,
                    type: "void",
                    name: "initComponents",
                    params: [{}],
                    description: "Inizializza i componenti del frame, inclusi listener per eventi di finestra, componenti del layout e impostazioni generali",
                },
                {
                    id: 2,
                    isPublic: true,
                    type: "void",
                    name: "formWindowClosed",
                    params: [
                        { id: 0, type: "WindowEvent", name: "evt" },
                    ],
                    description: "Gestisce l'evento di chiusura della finestra, riaprendo il menu principale e rendendo invisibili flag e classifica",
                },
                {
                    id: 3,
                    isPublic: true,
                    type: "void",
                    name: "formWindowClosing",
                    params: [
                        { id: 0, type: "WindowEvent", name: "evt" },
                    ],
                    description: "Gestisce l'evento di chiusura della finestra, riaprendo il menu principale e resettando le bandiere",
                },
                {
                    id: 4,
                    isPublic: true,
                    type: "void",
                    name: "formComponentResized",
                    params: [{ id: 0, type: "ComponentEvent", name: "evt" }],
                    description: "Gestisce l'evento di ridimensionamento del frame, riportando flag e classifica allo stato normale",
                },
                {
                    id: 5,
                    isPublic: true,
                    type: "void",
                    name: "formWindowIconified",
                    params: [{ id: 0, type: "WindowEvent", name: "evt" }],
                    description: "Gestisce l'evento di minimizzazione della finestra, minimizzando anche flag e classifica",
                },
                {
                    id: 6,
                    isPublic: true,
                    type: "void",
                    name: "formComponentMoved",
                    params: [{ id: 0, type: "ComponentEvent", name: "evt" }],
                    description: "Gestisce l'evento di spostamento del frame, aggiornando la posizione di flag e classifica in base all'attributo isFlagAttached",
                },
            ],
        },
        {
            id: 3,
            class: "JCasella",
            description: "Classe che estende JLabel e rappresenta una casella sul campo minato con la sua posizione (X, Y) e funzionalità per cambiare immagine in base allo stato",
            attributes: [
                { d: "X: coordinata dell'asse X della casella sul campo minato", id: 0 },
                { d: "Y: coordinata dell'asse Y della casella sul campo minato", id: 1 },
            ],
            isMethods: true,
            methods: [
                {
                    id: 0,
                    isPublic: true,
                    type: "",
                    name: "JCasella",
                    params: [
                        { id: 0, type: "int", name: "x" },
                        { id: 1, type: "int", name: "y" },
                    ],
                    description: "Costruttore che inizializza la casella con le coordinate X e Y, e imposta l'immagine iniziale allo stato COPERTA",
                },
                {
                    id: 1,
                    isPublic: true,
                    type: "void",
                    name: "ChangeImage",
                    params: [{ id: 0, type: "Stato", name: "s" }],
                    description: "Cambia l'immagine della casella in base allo stato specificato. Gli stati possono rappresentare vari aspetti del gioco, come COPERTA, BRUCIATA, SCOPERTA, FLAG, MINA, ESPLOSIONE, e numeri da 1 a 8",
                },
            ],
        },
        {
            id: 4,
            class: "JMatrice",
            description: "Classe che gestisce la matrice del campo minato, collegando le caselle (JCasella) al gioco e gestendo eventi di mouse per l'interazione con il campo",
            attributes: [
                { d: "c: oggetto CampoMinato che rappresenta il campo del gioco", id: 0 },
                { d: "labels: matrice di oggetti JCasella che rappresentano le caselle sul campo", id: 1 },
                { d: "startTime: tempo di inizio del gioco per misurare il tempo trascorso", id: 2 },
                { d: "boolean flagms: flag per tracciare lo stato del gioco, indicando se il tempo è stato avviato", id: 3 },
                { d: "Flag flag: oggetto Flag collegato al campo minato", id: 4 },
            ],
            isMethods: true,
            methods: [
                {
                    id: 0,
                    isPublic: true,
                    type: "",
                    name: "JMatrice",
                    params: [
                        { id: 0, type: "JCampoMinato", name: "frame" },
                        { id: 1, type: "Flag", name: "flag" },
                        { id: 2, type: "Difficulty", name: "diff" },
                        { id: 3, type: "String", name: "name" },
                        { id: 4, type: "Classifica", name: "classifica" },
                    ],
                    description: "Costruttore che inizializza la matrice del campo minato, impostando le caselle e aggiungendo listener per gestire clic e interazioni sul campo",
                },
                {
                    id: 1,
                    isPublic: true,
                    type: "void",
                    name: "RefreshStatoJCasella",
                    params: [{}],
                    description: "Aggiorna lo stato visivo di tutte le caselle in base ai dati del campo minato. Cambia le immagini delle caselle a seconda del loro stato nel gioco",
                },
                {
                    id: 2,
                    isPublic: true,
                    type: "void",
                    name: "removeMouseListeners",
                    params: [{}],
                    description: "Rimuove tutti i listener del mouse dalle caselle della matrice per impedire ulteriori interazioni dopo un evento di fine gioco",
                },
                {
                    id: 3,
                    isPublic: true,
                    type: "void",
                    name: "RevealSlowBombe",
                    params: [
                        { id: 0, type: "JFrame", name: "frame" },
                        { id: 1, type: "Difficulty", name: "diff" },
                    ],
                    description: "Rivela lentamente le bombe una alla volta sul campo minato. Utilizza un nuovo thread per far apparire le bombe gradualmente, modificando l'immagine della casella",
                },
                {
                    id: 4,
                    isPublic: true,
                    type: "void",
                    name: "Exsplosion",
                    params: [
                        { id: 0, type: "JFrame", name: "frame" },
                        { id: 1, type: "Difficulty", name: "diff" },
                    ],
                    description: "Mostra l'esplosione nel campo minato. Cambia le immagini delle caselle per simulare un'esplosione e poi le brucia, rimuovendole alla fine",
                },
                {
                    id: 5,
                    isPublic: true,
                    type: "void",
                    name: "cambiaSfondoConImmagine",
                    params: [
                        { id: 0, type: "JFrame", name: "frame" },
                        { id: 1, type: "String", name: "percorso" },
                    ],
                    description: "Cambia lo sfondo del frame con un'immagine specificata. Carica l'immagine, la applica a un JLabel e lo aggiunge al content pane del frame",
                },
                {
                    id: 6,
                    isPublic: true,
                    type: "void",
                    name: "RemoveLabel",
                    params: [{ id: 0, type: "JFrame", name: "frame" }],
                    description: "Rimuove tutte le etichette dal frame dopo una breve pausa, rendendole invisibili per indicare la fine del gioco",
                },
            ],
        },
        {
            id: 5,
            class: "Menù",
            description: "Classe che estende JFrame e rappresenta il menu per scegliere la difficoltà e avviare il gioco. Include elementi interattivi e gestisce eventi di mouse per selezionare le opzioni",
            attributes: [
                { d: "scelta: oggetto Difficoltà che indica il livello di difficoltà selezionato", id: 0 },
                { d: "blue: oggetto colore che rappresenta il colore di sfondo principale per il menu", id: 1 },
                { d: "nome: stringa che rappresenta il nome del giocatore.", id: 2 },
            ],
            isMethods: true,
            methods: [
                {
                    id: 0,
                    isPublic: true,
                    type: "",
                    name: "Menù",
                    params: [
                        { id: 0, type: "Difficulty", name: "scelta" },
                        { id: 1, type: "String", name: "nome" },
                    ],
                    description: "Costruttore che inizializza il menu con la difficoltà e il nome del giocatore. Imposta il colore di sfondo e la posizione della finestra",
                },
                {
                    id: 1,
                    isPublic: true,
                    type: "void",
                    name: "initComponents",
                    params: [{}],
                    description: "Inizializza i componenti del menu, compresi i pulsanti per selezionare la difficoltà e i listener per eventi di mouse",
                },
                {
                    id: 2,
                    isPublic: true,
                    type: "void",
                    name: "BeasyMouseMoved",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il movimento del mouse sopra il pulsante 'Facile'. Cambia l'icona del pulsante e il colore di sfondo del menu",
                },
                {
                    id: 3,
                    isPublic: true,
                    type: "void",
                    name: "BmediumMouseMoved",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il movimento del mouse sopra il pulsante 'Medio'. Cambia l'icona del pulsante e il colore di sfondo del menu",
                },
                {
                    id: 4,
                    isPublic: true,
                    type: "void",
                    name: "BhardMouseMoved",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il movimento del mouse sopra il pulsante 'Difficile'. Cambia l'icona del pulsante e il colore di sfondo del menu",
                },
                {
                    id: 5,
                    isPublic: true,
                    type: "void",
                    name: "formMouseMoved",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il movimento del mouse all'interno del menu. Ripristina le icone dei pulsanti di difficoltà allo stato predefinito",
                },
                {
                    id: 6,
                    isPublic: true,
                    type: "void",
                    name: "BeasyMouseClicked",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il clic sul pulsante 'Facile'. Imposta la difficoltà su 'Facile' e avvia il campo minato corrispondente",
                },
                {
                    id: 7,
                    isPublic: true,
                    type: "void",
                    name: "BmediumMouseClicked",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il clic sul pulsante 'Medio'. Imposta la difficoltà su 'Medio' e avvia il campo minato corrispondente",
                },
                {
                    id: 8,
                    isPublic: true,
                    type: "void",
                    name: "BhardMouseClicked",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il clic sul pulsante 'Difficile'. Imposta la difficoltà su 'Difficile' e avvia il campo minato corrispondente",
                },
                {
                    id: 9,
                    isPublic: true,
                    type: "void",
                    name: "jLabel2MouseClicked",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il clic sull'etichetta per uscire dal menu. Chiude l'applicazione",
                },
                {
                    id: 10,
                    isPublic: true,
                    type: "void",
                    name: "generaCampo",
                    params: [{}],
                    description: "Avvia un nuovo campo minato con la difficoltà selezionata e il nome del giocatore. Nasconde il menu",
                },
            ],
        },
        {
            id: 6,
            class: "Start",
            description: "Classe che estende JFrame e rappresenta la finestra di avvio dell'applicazione. Include elementi interattivi per iniziare il gioco e accedere alle regole",
            attributes: [
                { d: "blue: Oggetto Colore che rappresenta il colore dello sfondo principale utilizzato nella finestra di avvio", id: 0 },
            ],
            isMethods: true,
            methods: [
                {
                    id: 0,
                    isPublic: true,
                    type: "",
                    name: "Start",
                    params: [{}],
                    description: "Costruttore che inizializza la finestra di avvio, impostando la posizione e il colore di sfondo. Aggiunge listener per eventi di mouse e tasti di interazione",
                },
                {
                    id: 1,
                    isPublic: true,
                    type: "void",
                    name: "initComponents",
                    params: [{}],
                    description: "Inizializza i componenti della finestra di avvio, compresi i pulsanti e gli elementi interattivi come etichette e icone",
                },
                {
                    id: 2,
                    isPublic: true,
                    type: "void",
                    name: "jLabel2MouseClicked",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il clic sul pulsante 'Start', aprendo il menu principale e nascondendo la finestra di avvio",
                },
                {
                    id: 3,
                    isPublic: true,
                    type: "void",
                    name: "jLabel2MouseMoved",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il movimento del mouse sopra il pulsante 'Start', cambiando l'icona per indicare lo stato di pressione",
                },
                {
                    id: 4,
                    isPublic: true,
                    type: "void",
                    name: "jLabel3MouseClicked",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il clic sul pulsante 'Rules', aprendo il browser predefinito con l'URL delle regole del gioco",
                },
                {
                    id: 5,
                    isPublic: true,
                    type: "void",
                    name: "jLabel3MouseMoved",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il movimento del mouse sopra il pulsante 'Rules', cambiando l'icona per indicare lo stato di pressione",
                },
                {
                    id: 6,
                    isPublic: true,
                    type: "void",
                    name: "formMouseMoved",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il movimento del mouse all'interno della finestra di avvio, ripristinando le icone dei pulsanti allo stato predefinito",
                },
                {
                    id: 7,
                    isPublic: true,
                    type: "void",
                    name: "jLabel5MouseClicked",
                    params: [{ id: 0, type: "MouseEvent", name: "evt" }],
                    description: "Gestisce il clic sul pulsante 'X' per chiudere l'applicazione, terminando il programma",
                },
            ]
        },
        {
            id: 1,
            enum: "Stato",
            description: "Enumerazione che rappresenta i diversi stati che una casella può assumere in un campo minato. Ogni stato corrisponde a un'icona o colore specifico",
            values: [
                {
                    id: 0,
                    name: "COPERTA",
                    description: "Rappresenta una casella coperta, senza rivelazioni",
                },
                {
                    id: 1,
                    name: "NUM_1",
                    description: "Rappresenta una casella con il numero 1, indicando la presenza di una mina vicina",
                },
                {
                    id: 2,
                    name: "NUM_2",
                    description: "Rappresenta una casella con il numero 2, indicando la presenza di due mine vicine",
                },
                {
                    id: 3,
                    name: "NUM_3",
                    description: "Rappresenta una casella con il numero 3, indicando la presenza di tre mine vicine",
                },
                {
                    id: 4,
                    name: "NUM_4",
                    description: "Rappresenta una casella con il numero 4, indicando la presenza di quattro mine vicine",
                },
                {
                    id: 5,
                    name: "NUM_5",
                    description: "Rappresenta una casella con il numero 5, indicando la presenza di cinque mine vicine",
                },
                {
                    id: 6,
                    name: "NUM_6",
                    description: "Rappresenta una casella con il numero 6, indicando la presenza di sei mine vicine",
                },
                {
                    id: 7,
                    name: "NUM_7",
                    description: "Rappresenta una casella con il numero 7, indicando la presenza di sette mine vicine",
                },
                {
                    id: 8,
                    name: "NUM_8",
                    description: "Rappresenta una casella con il numero 8, indicando la presenza di otto mine vicine",
                },
                {
                    id: 9,
                    name: "MINA",
                    description: "Rappresenta una casella con una mina",
                },
                {
                    id: 10,
                    name: "SCOPERTA",
                    description: "Rappresenta una casella scoperta",
                },
                {
                    id: 11,
                    name: "FLAG",
                    description: "Rappresenta una casella con una bandiera, indicando che potrebbe contenere una mina",
                },
                {
                    id: 12,
                    name: "FIORE",
                    description: "Rappresenta una casella con un fiore, un elemento speciale o bonus",
                },
                {
                    id: 13,
                    name: "ESPLOSIONE",
                    description: "Rappresenta una casella che ha subito un'esplosione",
                },
                {
                    id: 14,
                    name: "BRUCIATA",
                    description: "Rappresenta una casella bruciata o danneggiata dopo un'esplosione",
                },
            ],
        },
    ];

    return (
        <div className="DataSheet_Graphic">
            <h2 className="title">DATASHEET - GRAPHIC</h2>
            {
                graphicClasses
                    .map((classData) => (
                        <ClassAccordion data={classData} key={classData.id} />
                    ))
            }
        </div>
    )
}

export default DataSheet_Graphic;